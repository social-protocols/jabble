generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  username    String        @unique
  name        String?
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  password    Password?
  posts       Post[]
  sessions    Session[]
  voteHistory VoteHistory[]

  @@map("user")
}

model Password {
  hash   String
  userId Int    @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password")
}

model Session {
  id             String   @id @default(cuid())
  expirationDate DateTime @map("expiration_date")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  userId         Int      @map("user_id")
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("session")
}

model Post {
  id        Int      @id @default(autoincrement())
  parentId  Int?     @map("parent_id")
  content   String
  authorId  Int      @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  parent    Post?    @relation("post_notes", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  notes     Post[]   @relation("post_notes")
  user      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("post")
}

model Tag {
  id          Int           @id @default(autoincrement())
  tag         String        @unique(map: "sqlite_autoindex_tags_1")
  VoteHistory VoteHistory[]

  @@map("tag")
}

model VoteHistory {
  rowid     Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  tagId     Int      @map("tag_id")
  postId    Int      @map("post_id")
  noteId    Int?     @map("note_id")
  direction Int
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("vote_history")
}
